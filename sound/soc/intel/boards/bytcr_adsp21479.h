/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   snd_adsp21479_machine_driver.h
 * Author: root
 *
 * Created on November 11, 2015, 3:30 PM
 */

#ifndef SND_ADSP21479_MACHINE_DRIVER_H
#define SND_ADSP21479_MACHINE_DRIVER_H

#ifdef __cplusplus
extern "C" {
#endif
#define WORD_LENGTH_BYTES 4
#define BITS_PER_BYTE 8
#define SPEED_HZ 2000
#define SPI_MESSAGE_MAX_NUMBER_OF_WORDS 4
#define SPI_SYNC_WORD 0xDEADBEEF
#define SPI_WRITE_MESSAGE_LENGTH 3
#define SPI_READ_MESSAGE_LENGTH 2
#define SPI_WRITE_NUMBER_OF_WORDS 4
#define SPI_READ_NUMBER_OF_WORDS 3
#define VOLUME_CMD_GROUP 0x8100

#define VOLUME1_SET_LEVEL (VOLUME_CMD_GROUP +0)
#define VOLUME2_SET_LEVEL (VOLUME_CMD_GROUP +1)
  
#define SOUND_CARD_NAME "bytcr_adsp21479"
#define SOUND_CARD_MACHINE_DEVICE "bytcr_adsp21479"

enum VOLUME_LEVEL_T 
{ 
    BOTH,
    VOLUME1,
    VOLUME2,
};

enum SPI_RECEIVE_STATE_T
{
    WAITING_FOR_SYNC,
    WAITING_FOR_LENGTH_AND_STATUS,
    WAITING_FOR_RESULT_VALUE,
    WAITING_FOR_CRC,
    DONE,
};
typedef enum SPI_RECEIVE_STATE_T SPI_RECEIVE_STATE;
typedef  enum VOLUME_LEVEL_T VOLUME_LEVEL;

static const unsigned char bit_reverse_table_256[] = 
{
  0x00, 0x80, 0x40, 0xC0, 0x20, 0xA0, 0x60, 0xE0, 0x10, 0x90, 0x50, 0xD0, 0x30, 0xB0, 0x70, 0xF0, 
  0x08, 0x88, 0x48, 0xC8, 0x28, 0xA8, 0x68, 0xE8, 0x18, 0x98, 0x58, 0xD8, 0x38, 0xB8, 0x78, 0xF8, 
  0x04, 0x84, 0x44, 0xC4, 0x24, 0xA4, 0x64, 0xE4, 0x14, 0x94, 0x54, 0xD4, 0x34, 0xB4, 0x74, 0xF4, 
  0x0C, 0x8C, 0x4C, 0xCC, 0x2C, 0xAC, 0x6C, 0xEC, 0x1C, 0x9C, 0x5C, 0xDC, 0x3C, 0xBC, 0x7C, 0xFC, 
  0x02, 0x82, 0x42, 0xC2, 0x22, 0xA2, 0x62, 0xE2, 0x12, 0x92, 0x52, 0xD2, 0x32, 0xB2, 0x72, 0xF2, 
  0x0A, 0x8A, 0x4A, 0xCA, 0x2A, 0xAA, 0x6A, 0xEA, 0x1A, 0x9A, 0x5A, 0xDA, 0x3A, 0xBA, 0x7A, 0xFA,
  0x06, 0x86, 0x46, 0xC6, 0x26, 0xA6, 0x66, 0xE6, 0x16, 0x96, 0x56, 0xD6, 0x36, 0xB6, 0x76, 0xF6, 
  0x0E, 0x8E, 0x4E, 0xCE, 0x2E, 0xAE, 0x6E, 0xEE, 0x1E, 0x9E, 0x5E, 0xDE, 0x3E, 0xBE, 0x7E, 0xFE,
  0x01, 0x81, 0x41, 0xC1, 0x21, 0xA1, 0x61, 0xE1, 0x11, 0x91, 0x51, 0xD1, 0x31, 0xB1, 0x71, 0xF1,
  0x09, 0x89, 0x49, 0xC9, 0x29, 0xA9, 0x69, 0xE9, 0x19, 0x99, 0x59, 0xD9, 0x39, 0xB9, 0x79, 0xF9, 
  0x05, 0x85, 0x45, 0xC5, 0x25, 0xA5, 0x65, 0xE5, 0x15, 0x95, 0x55, 0xD5, 0x35, 0xB5, 0x75, 0xF5,
  0x0D, 0x8D, 0x4D, 0xCD, 0x2D, 0xAD, 0x6D, 0xED, 0x1D, 0x9D, 0x5D, 0xDD, 0x3D, 0xBD, 0x7D, 0xFD,
  0x03, 0x83, 0x43, 0xC3, 0x23, 0xA3, 0x63, 0xE3, 0x13, 0x93, 0x53, 0xD3, 0x33, 0xB3, 0x73, 0xF3, 
  0x0B, 0x8B, 0x4B, 0xCB, 0x2B, 0xAB, 0x6B, 0xEB, 0x1B, 0x9B, 0x5B, 0xDB, 0x3B, 0xBB, 0x7B, 0xFB,
  0x07, 0x87, 0x47, 0xC7, 0x27, 0xA7, 0x67, 0xE7, 0x17, 0x97, 0x57, 0xD7, 0x37, 0xB7, 0x77, 0xF7, 
  0x0F, 0x8F, 0x4F, 0xCF, 0x2F, 0xAF, 0x6F, 0xEF, 0x1F, 0x9F, 0x5F, 0xDF, 0x3F, 0xBF, 0x7F, 0xFF
};


static const u32 integer_volume_to_float_db[] = {
0xC2C80000u,
0xC2C60000u,
0xC2C40000u,
0xC2C20000u,
0xC2C00000u,
0xC2BE0000u,
0xC2BC0000u,
0xC2BA0000u,
0xC2B80000u,
0xC2B60000u,
0xC2B40000u,
0xC2B20000u,
0xC2B00000u,
0xC2AE0000u,
0xC2AC0000u,
0xC2AA0000u,
0xC2A80000u,
0xC2A60000u,
0xC2A40000u,
0xC2A20000u,
0xC2A00000u,
0xC29E0000u,
0xC29C0000u,
0xC29A0000u,
0xC2980000u,
0xC2960000u,
0xC2940000u,
0xC2920000u,
0xC2900000u,
0xC28E0000u,
0xC28C0000u,
0xC28A0000u,
0xC2880000u,
0xC2860000u,
0xC2840000u,
0xC2820000u,
0xC2800000u,
0xC27C0000u,
0xC2780000u,
0xC2740000u,
0xC2700000u,
0xC26C0000u,
0xC2680000u,
0xC2640000u,
0xC2600000u,
0xC25C0000u,
0xC2580000u,
0xC2540000u,
0xC2500000u,
0xC24C0000u,
0xC2480000u,
0xC2440000u,
0xC2400000u,
0xC23C0000u,
0xC2380000u,
0xC2340000u,
0xC2300000u,
0xC22C0000u,
0xC2280000u,
0xC2240000u,
0xC2200000u,
0xC21C0000u,
0xC2180000u,
0xC2140000u,
0xC2100000u,
0xC20C0000u,
0xC2080000u,
0xC2040000u,
0xC2000000u,
0xC1F80000u,
0xC1F00000u,
0xC1E80000u,
0xC1E00000u,
0xC1D80000u,
0xC1D00000u,
0xC1C80000u,
0xC1C00000u,
0xC1B80000u,
0xC1B00000u,
0xC1A80000u,
0xC1A00000u,
0xC1980000u,
0xC1900000u,
0xC1880000u,
0xC1800000u,
0xC1700000u,
0xC1600000u,
0xC1500000u,
0xC1400000u,
0xC1300000u,
0xC1200000u,
0xC1100000u,
0xC1000000u,
0xC0E00000u,
0xC0C00000u,
0xC0A00000u,
0xC0800000u,
0xC0400000u,
0xC0000000u,
0xBF800000u,
0x00000000u,
};

struct snd_adsp21479_chip {
   
    struct snd_soc_card*    card; 
    long                current_volume;
    u8                  spi_send_buffer[WORD_LENGTH_BYTES*SPI_MESSAGE_MAX_NUMBER_OF_WORDS];
    u8                  spi_receive_buffer[WORD_LENGTH_BYTES*SPI_MESSAGE_MAX_NUMBER_OF_WORDS];
    spinlock_t          lock;
};

#ifdef __cplusplus
}
#endif

#endif /* SND_ADSP21479_MACHINE_DRIVER_H */

